events {
  worker_connections 1024;
}

http {
  include       mime.types;
  default_type  application/octet-stream;

  sendfile        on;
  
  # Add resolver for DNS resolution
  resolver 8.8.8.8 ipv6=off;

  server {
    listen 80;
    server_name imagepipe.up.railway.app;

    # React frontend static files
    location / {
      root /usr/share/nginx/html;
      index index.html index.htm;
      try_files $uri /index.html;
    }

    # Forward API requests to the Flask backend
    location /api/ {
      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Max-Age' 1728000 always;
        add_header 'Content-Type' 'text/plain; charset=utf-8' always;
        add_header 'Content-Length' 0 always;
        return 204;
      }

      # Set variable for dynamic proxy_pass
      set $upstream ${GATEWAY_URL};
      
      # Remove /api prefix but keep the rest of the path
      rewrite ^/api/(.*) /$1 break;
      proxy_pass $upstream$uri;
      
      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
      
      proxy_set_header Host $proxy_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Original-URI $request_uri;

      proxy_ssl_verify off;
      proxy_ssl_server_name on;
      
      client_max_body_size 16M;

      # Debug logging
      error_log /var/log/nginx/error.log debug;
      access_log /var/log/nginx/access.log combined;
    }
  }
}
